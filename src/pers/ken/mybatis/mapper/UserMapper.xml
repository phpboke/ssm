<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离 
注意：使用mapper代理方法开发，namespace有特殊重要的作用，namespace等于mapper接口地址
-->
<mapper namespace="pers.ken.mybatis.mapper.UserMapper">

	<!-- mapper代理开发 -->
	<select id="findUserById" parameterType="int" resultType="pers.ken.mybatis.po.User">
		SELECT * FROM user WHERE id=#{value}
	</select>
	
	<!-- 模糊查询多条数据 -->
	<select id="findUserList" parameterType="pers.ken.mybatis.po.UserQueryVo" resultType="pers.ken.mybatis.po.UserCustom">
		SELECT * FROM user 
		<where>
			<include refid="query_user_where"></include>
		</where>
	</select>
	
	<!-- 查询总数 -->
	<select id="findUserCount" parameterType="pers.ken.mybatis.po.UserQueryVo" resultType="int">
		SELECT COUNT(*) FROM user 
		<where>
			<include refid="query_user_where"></include>
		</where>
	</select>
	
	<select id="findUserByIdResultMap" parameterType="int" resultMap="userResultMap">
		SELECT id id_, username username_ FROM user WHERE id = #{value}
	</select>
	
	<!-- 查询出的列名和对象名称不一致，这里做映射 -->
	<resultMap type="pers.ken.mybatis.po.User" id="userResultMap">
		<id column="id_" property="id"/>
		<result column="username_" property="username"/>
	</resultMap>
	
	<!-- sql拼接 -->
	<sql id="query_user_where">
		<if test="userCustom != null">
				<if test="userCustom.sex != null and userCustom != ''">
					AND user.sex = #{userCustom.sex}
				</if>
				<if test="userCustom.username != null and userCustom.username != ''">
					AND user.username LIKE '%${userCustom.username}%'
				</if>
				<if test="ids != null">
					<foreach collection="ids" item="user_id" open="AND (" close=")" separator="or">
						id=#{user_id}
					</foreach>
				</if>
		</if>
	</sql>
	
	<!-- 定义别名 -->
<!-- 	<typeAliases>
		<typeAlias type="pers.ken.mybatis.po.User" alias="user"/>
	</typeAliases> -->
	
</mapper>


